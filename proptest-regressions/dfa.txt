# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 290804c4d4c73f99e568bacf43767f036a2ab464f4b49a4a3f793b740ad3b226 # shrinks to (expr, input) = (Sequence(vec![Many1(Box::new(Many1(Box::new(Sequence(vec![Alternative(vec![Optional(Box::new(Optional(Box::new(Optional(Box::new(Optional(Box::new(Variable("FILE".to_string()))))))))), Optional(Box::new(Variable("FILE".to_string())))]), Sequence(vec![Sequence(vec![Sequence(vec![Alternative(vec![Alternative(vec![Variable("DIRECTORY".to_string()), Literal("bar".to_string())]), Optional(Box::new(Variable("DIRECTORY".to_string())))]), Sequence(vec![Alternative(vec![Variable("DIRECTORY".to_string()), Variable("FILE".to_string())]), Alternative(vec![Literal("foo".to_string()), Literal("bar".to_string())])])]), Variable("PATH".to_string())]), Many1(Box::new(Many1(Box::new(Literal("--baz".to_string())))))])]))))), Sequence(vec![Literal("--baz".to_string()), Optional(Box::new(Optional(Box::new(Sequence(vec![Many1(Box::new(Optional(Box::new(Many1(Box::new(Variable("PATH".to_string()))))))), Many1(Box::new(Variable("FILE".to_string())))])))))])]), ["anything", "anything", "foo", "anything", "--baz", "--baz", "--baz", "--baz", "--baz", "--baz"])
cc 9b52cef55548b6a3e4a4faa6581de03ac6c9e207b3922564046ee7f63265cc35 # shrinks to (expr, input) = (Many1(Box::new(Sequence(vec![Sequence(vec![Alternative(vec![Many1(Box::new(Literal("bar".to_string()))), Variable("PATH".to_string())]), Variable("FILE".to_string())]), Sequence(vec![Variable("PATH".to_string()), Literal("bar".to_string())])]))), ["bar", "bar", "bar", "anything", "anything", "bar", "anything", "anything", "anything", "bar"])
cc 60d4b8c83814e6e4ad195ec21c9fa03651dcf53a030eaf8e5cb78e081b19e4c3 # shrinks to (expr, input) = (Many1(Box::new(Many1(Box::new(Sequence(vec![Sequence(vec![Alternative(vec![Sequence(vec![Many1(Box::new(Optional(Box::new(Alternative(vec![Literal("foo".to_string()), Variable("FILE".to_string())]))))), Optional(Box::new(Optional(Box::new(Literal("bar".to_string())))))]), Many1(Box::new(Sequence(vec![Many1(Box::new(Literal("foo".to_string()))), Many1(Box::new(Variable("PATH".to_string())))])))]), Variable("DIRECTORY".to_string())]), Variable("PATH".to_string())]))))), ["foo", "foo", "anything", "anything", "anything", "foo", "anything", "foo", "foo", "foo", "anything", "anything", "anything", "anything", "foo", "anything", "anything", "anything", "anything", "anything", "anything", "anything"])
cc 980c5570001d7d18508fe9710de98da4bcef1d769bd5eb14921a61574507fb81 # shrinks to (expr, input) = (Sequence(vec![Optional(Box::new(Literal("foo".to_string()))), Many1(Box::new(Literal("bar".to_string())))]), ["bar", "bar"])
